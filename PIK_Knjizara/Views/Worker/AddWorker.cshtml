@model PIK_Knjizara.Models.ViewModels.AddWorkerModel

@{
    ViewBag.Title = "AddWorker";
}

<h2>AddWorker</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <hr />

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="d-flex flex-row">
        <div class="w-100">
            <div class="form-group">
                @Html.LabelFor(model => model.FName, htmlAttributes: new { @class = "control-label col-md-2 w-100" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LName, htmlAttributes: new { @class = "control-label col-md-2 w-100" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.E_mail, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.E_mail, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.E_mail, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Pass, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Pass, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Pass, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2 w-100" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Add worker" class="btn btn-outline-success" />
                </div>
            </div>

        </div>
        <div class="w-100">

            <div class="form-group">
                @Html.LabelFor(model => model.OIB, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OIB, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.OIB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Workplace, htmlAttributes: new { @class = "control-label col-md-2 w-100" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Workplace, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Workplace, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
    </div>
}
